{"version":3,"sources":["images/auth_logo.png","logo.svg","Signup.js","LogButton.js","Info.js","LoginForm.js","FilmDescr.js","Account.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signup","className","action","id","type","placeholder","onClick","props","reg","changePage","React","Component","LogButton","setFunction","flag","getUserInfo","page","isAuthorized","exitOrSignup","isAuth","exit","login","this","src","logo","href","Info","LoginForm","auth","FilmDescr","state","isOpen","changeState","setState","film","description","length","substring","title","language","rating","Account","films","i","listOfFilms","App","url","document","getElementById","value","password","fetch","method","headers","body","JSON","stringify","then","response","json","respJson","success","email","console","log","newState","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7b8d533.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auth_logo.cf2107eb.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport './styles/LogButton.css';\r\n\r\nexport default class Signup extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"logForm\" action=\"action_page.php\">\r\n                <div className=\"login\">\r\n                    <p><b>Login</b></p>\r\n                    <input id='reg-login' type=\"text\" placeholder=\"login\"/>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <p><b>Email</b></p>\r\n                    <input id='reg-email' type=\"text\" placeholder=\"email\"/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <p><b>Password</b></p>\r\n                    <input id='reg-password' type=\"password\" placeholder=\"password\"/>\r\n                </div>\r\n                <div className=\"submit\">\r\n                    <button className='submit-button' onClick={() => this.props.reg()}>Sign up</button>\r\n                </div>\r\n                <div className=\"goback\">\r\n                    <button className=\"gobackButton\" onClick={() => this.props.changePage('main')}>Go back to main page</button>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './styles/LogButton.css';\r\nimport logo from './images/auth_logo.png';\r\nimport Signup from './Signup'\r\n\r\n\r\nexport default class LogButton extends React.Component {\r\n\r\n    setFunction = (flag) => {\r\n        if (flag) {\r\n            this.props.getUserInfo()\r\n        } else {\r\n            let page = this.props.isAuthorized ? 'account' : 'auth'\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n\r\n    exitOrSignup = (isAuth) => {\r\n        if (isAuth) {\r\n            this.props.exit()\r\n        } else {\r\n            this.props.changePage('reg')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { login } = this.props\r\n        let { isAuthorized } = this.props\r\n        let exit = isAuthorized ? 'Log out' : 'Sign up'\r\n        return (\r\n            <div className=\"logIcon\">\r\n                <div className='acc-pic' onClick={() => this.setFunction(isAuthorized)}>\r\n                    <img src={logo} className=\"image\"/>\r\n                    <span className=\"login-span\">\r\n                        {login}&nbsp;\r\n                    </span>\r\n                    <a href='/login/vk-oauth2'>VK</a>\r\n                </div>\r\n                <p onClick={() => this.exitOrSignup(isAuthorized)}>{exit}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./styles/Info.css\";\r\n\r\nexport default class Info extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Info1\">\r\n                <h1>About us</h1>\r\n                    <p> \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \r\n                        sed do eiusmod tempor incididunt ut labore\r\n                        et dolore magna aliqua. Ut enim ad minim veniam,\r\n                        quis nostrud exercitation ullamco laboris nisi ut\r\n                        aliquip ex ea commodo consequat. Duis aute irure dolor\r\n                        in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n                        nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n                        culpa qui officia deserunt mollit anim id est laborum.\"\r\n                    </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './styles/LoginForm.css'\r\n\r\nexport default class LoginForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"logForm\" action=\"action_page.php\">\r\n                <div className=\"login\">\r\n                    <p><b>Login</b></p>\r\n                    <input id='login' type=\"text\" placeholder=\"Type in your login\"/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <p><b>Password</b></p>\r\n                    <input id='password' type=\"password\" placeholder=\"Type in your password\"/>\r\n                </div>\r\n                <div className=\"submit\">\r\n                    <button className='submit-button' onClick={() => this.props.auth()}>Sign in</button>\r\n                </div>\r\n                <div className=\"goback\">\r\n                    <button className=\"gobackButton\" onClick={() => this.props.changePage('main')}>Go back to main page</button>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './styles/Account.css';\r\n\r\n\r\nexport default class FilmDescr extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    changeState = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {film} = this.props\r\n        let description = this.state.isOpen || film.description.length < 12 ? film.description : film.description.substring(0, 10) + \"...\"\r\n        return(\r\n            <div className=\"about-film\">\r\n                <h3>Title: {film.title}</h3><br/>\r\n\r\n                <div className='about'>\r\n                    <b className='descr' \r\n                    onClick={() => this.changeState()}>\r\n                        Description:&nbsp;\r\n                    </b>{description}<br/>\r\n                    <b>Language:</b> {film.language} <br/>\r\n                    <b>Rating:</b> {film.rating}\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './styles/Account.css';\r\nimport logo from './images/auth_logo.png'\r\nimport FilmDescr from './FilmDescr'\r\n\r\n\r\nexport default class Account extends React.Component {\r\n\r\n    * listOfFilms() {\r\n        let { films } = this.props\r\n        for (let i = 0; i < films.length; i++) {\r\n            yield (\r\n                // <div className=\"about-film\">\r\n                //     <h3>Title: {films[i].title}</h3><br/>\r\n                //     <b>Description:</b> {films[i].description}<br/>\r\n                //     <b>Language:</b> {films[i].language} <br/>\r\n                //     <b>Rating:</b> {films[i].rating} \r\n                // </div>\r\n                <FilmDescr film={films[i]} />\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MainContent\">\r\n                    <div className=\"PictureButton\">\r\n                        <img className=\"ProfilePicture\" src={logo}/>\r\n                        <button onClick={() => this.props.changePage('main')}>Back to main page</button>\r\n                            {/* /*<p>Choose profile picture:</p>\r\n                            <input id=\"loadImage\" type=\"file\" onChange={}/> */}\r\n                    </div>  \r\n                    <div className=\"PersonInfo\">\r\n                        <p><b>Nickname:</b> {this.props.login}</p>\r\n                        <p><b>Films watched:</b> {this.props.films.length}</p>\r\n                        <p><b>Films person watched:</b></p>\r\n                        \r\n                        <div className=\"WatchedFilms\">\r\n                            {[...this.listOfFilms()]}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './styles/App.css';\r\nimport LogButton from './LogButton';\r\nimport Info from './Info';\r\nimport LoginForm from './LoginForm'\r\nimport Account from './Account'\r\nimport Signup from './Signup'\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n      page: 'main',\r\n      isAuthorized: true,\r\n      login: 'Ke',\r\n      films: [],\r\n    //   url: document.location.href + 'api/'\r\n      url: \"http://192.168.0.102:8000\" + '/api/'\r\n  }\r\n  auth = () => {\r\n      let login = document.getElementById('login').value\r\n      let password = document.getElementById('password').value\r\n\r\n      fetch(this.state.url + 'auth/',{\r\n          method: \"POST\",\r\n          headers:{\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body:JSON.stringify({\r\n              \"login\": login,\r\n              \"password\": password\r\n          })\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((respJson) => {\r\n          if (respJson.success) {\r\n              this.setState({\r\n                  login: login,\r\n                  isAuthorized: true,\r\n                  page: 'main',\r\n              });\r\n          }\r\n      })\r\n  }\r\n\r\n  reg = () => {\r\n    let login = document.getElementById('reg-login').value\r\n    let password = document.getElementById('reg-password').value\r\n    let email = document.getElementById('reg-email').value\r\n\r\n    fetch(this.state.url + 'registrate/', {\r\n      method: \"POST\",\r\n          headers:{\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body:JSON.stringify({\r\n              \"login\": login,\r\n              \"password\": password,\r\n              \"email\": email\r\n          })\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((respJson) => {\r\n          if (respJson.success) {\r\n              this.setState({\r\n                  login: login,\r\n                  isAuthorized: true,\r\n                  page: 'main',\r\n              });\r\n          }\r\n      })\r\n  }\r\n\r\n  getUserInfo = () => {\r\n      console.log(this.state.url);\r\n      fetch(this.state.url + 'get_user_info/',{\r\n          method: \"POST\",\r\n          headers:{\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body:JSON.stringify({\r\n              \"login\": this.state.login\r\n          })\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((respJson) => {\r\n          if (respJson.success) {\r\n            console.log(respJson.films)\r\n\r\n            this.setState({\r\n                films: respJson.films,\r\n                page: 'account',\r\n            });\r\n        }\r\n      })\r\n  }\r\n\r\n  exit = () => {\r\n    this.setState({\r\n      isAuthorized: false,\r\n      login: 'Login',\r\n      page: 'main'\r\n    })\r\n  }\r\n\r\n  changePage = newState => {\r\n      this.setState({\r\n          page: newState,\r\n      });\r\n  };\r\n\r\n\r\n    render() {\r\n      console.log(this.state.isAuthorized)\r\n        if (this.state.page === 'main') {\r\n            return (\r\n                  <div className=\"App\">\r\n                      <div className=\"header\">\r\n                          <LogButton changePage={this.changePage} isAuthorized={this.state.isAuthorized} login={this.state.login}\r\n                                      getUserInfo={this.getUserInfo} exit={this.exit} reg={this.reg}/>\r\n                      </div>\r\n                      <div className=\"main-block\">\r\n                          <Info/>\r\n                      </div>\r\n                </div>\r\n            );\r\n        } else if (this.state.page === 'auth') {\r\n            return (<LoginForm auth={this.auth} changePage={this.changePage}/>)\r\n        } else if (this.state.page === 'account'){\r\n            return(<Account changePage={this.changePage} films={this.state.films} login={this.state.login}/>)\r\n        } else if (this.state.page === 'reg') {\r\n          return(<Signup changePage={this.changePage} reg={this.reg}/>)\r\n        }\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}